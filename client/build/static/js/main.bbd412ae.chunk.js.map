{"version":3,"sources":["utils/state/userSlice.js","components/GenreOption/GenreOption.js","utils/helperFunctions/showCheckboxes.js","utils/state/musicSlice.js","components/GenreDropdown/GenreDropdown.js","components/Subnav/Subnav.js","components/Dashboard/Dashboard.js","components/Suggestion/Suggestion.js","components/Suggestions/Suggestions.js","components/Forum/Forum.js","components/Account/Account.js","utils/helperFunctions/getGenres.js","utils/helperFunctions/updateGenres.js","assets/inverted-logo.png","utils/state/preLoginSlice.js","components/SignedIn/SignedIn.js","utils/helperFunctions/showMessages.js","components/Login/Login.js","utils/helperFunctions/submitRegistration.js","components/Register/Register.js","App.js","utils/state/store.js","index.js"],"names":["getUserDetails","createAsyncThunk","a","fetch","mode","credentials","response","ok","json","jsonResponse","firstName","lastName","email","userSlice","createSlice","name","initialState","genres","reducers","resetUserDetails","state","action","setGenres","indexOf","payload","length","newGenres","filter","genre","extraReducers","fulfilled","selectFirstName","user","selectLastName","selectEmail","selectGenres","actions","userReducer","reducer","GenreOption","props","selectedGenres","useSelector","dispatch","useDispatch","htmlFor","className","type","id","value","toLowerCase","onClick","e","target","checked","includes","readOnly","expanded","showCheckboxes","checkboxes","document","getElementById","style","display","getAccessToken","authString","btoa","process","method","headers","body","access_token","getAvailableGenres","accessToken","getSuggestions","queryString","join","tracks","map","track","artists","album","uri","images","musicSlice","availableGenres","suggestions","resetMusicDetails","selectAccessToken","music","selectAvailableGenres","selectSuggestions","musicReducer","GenreDropdown","genreOptions","Subnav","placeholder","Dashboard","Suggestion","src","url","alt","artist","Suggestions","Forum","Account","getGenres","updateGenres","JSON","stringify","requestLogin","password","data","signedIn","message","logout","window","location","reload","preLoginSlice","registering","setRegistering","setMessage","selectRegistering","preLogin","selectSignedIn","selectMessage","preLoginReducer","SignedIn","userEmail","userFirstName","userLastName","useEffect","pendo","initialize","disableCookies","visitor","full_name","return_url","account","is_paying","monthly_value","then","i","to","logo","preventDefault","path","showMessages","visibility","Login","useState","setEmail","setPassword","onSubmit","onChange","required","submitRegistration","validatedPassword","Register","setFirstName","setLastName","setValidatedPassword","handleRegRequest","App","protocol","replace","href","substring","cookie","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.bbd412ae.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getUserDetails = createAsyncThunk(\n    'user/getUserDetails',\n    async () => {\n        const response = await fetch(`/user`, {\n            mode: \"cors\",\n            credentials: \"include\",\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return {\n                firstName: jsonResponse.firstName,\n                lastName: jsonResponse.lastName,\n                email: jsonResponse.email\n            };\n        }\n    }\n);\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        genres: []\n    },\n    reducers: {\n        resetUserDetails: (state, action) => {\n            state.firstName = '';\n            state.lastName = '';\n            state.email = '';\n            state.genres = [];\n        },\n        setGenres: (state, action) => {\n            if (state.genres.indexOf(action.payload) === -1 & state.genres.length < 5) {\n                return {\n                    ...state,\n                    genres: [...state.genres, action.payload]\n                };\n            } else {\n                const newGenres = state.genres.filter(genre => genre !== action.payload);\n                return {\n                    ...state,\n                    genres: newGenres\n                };\n            };\n        }\n    },\n    extraReducers: {\n        [getUserDetails.fulfilled]: (state, action) => {\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            state.email = action.payload.email;\n        }\n    }\n});\n\nexport const selectFirstName = state => state.user.firstName;\nexport const selectLastName = state => state.user.lastName;\nexport const selectEmail = state => state.user.email;\nexport const selectGenres = state => state.user.genres;\nexport const { resetUserDetails, setGenres } = userSlice.actions;\nconst userReducer = userSlice.reducer;\nexport default userReducer;","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport './GenreOption.css';\n\nexport default function GenreOption(props) {\n    const genre = props.genre;\n    const selectedGenres = useSelector(selectGenres);\n    const dispatch = useDispatch();\n\n    const handleGenreSelect = e => {\n        dispatch(setGenres(e.target.value));\n    };\n\n    return (\n        <label htmlFor={genre} className=\"genre-label\">\n            <input\n                className=\"genre-checkbox\"\n                type=\"checkbox\"\n                id={genre}\n                value={genre.toLowerCase()}\n                onClick={handleGenreSelect}\n                checked={selectedGenres.includes(genre.toLowerCase())}\n                readOnly />\n            <p className=\"genre\">{genre}</p>\n        </label>\n    );\n};","let expanded = false;\n\nexport const showCheckboxes = () => {\n    const checkboxes = document.getElementById(\"genres\");\n    if (!expanded) {\n        checkboxes.style.display = \"block\";\n        expanded = true;\n    } else {\n        checkboxes.style.display = \"none\";\n        expanded = false;\n    };\n};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getAccessToken = createAsyncThunk(\n    'music/getAccessToken',\n    async () => {\n        const authString = btoa(`${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`);\n        const response = await fetch(`https://accounts.spotify.com/api/token`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Basic ${authString}`,\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: \"grant_type=client_credentials\"\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.access_token;\n        };\n    }\n);\n\nexport const getAvailableGenres = createAsyncThunk(\n    'music/getAvailableGenres',\n    async ({ accessToken }) => {\n        const response = await fetch(`https://api.spotify.com/v1/recommendations/available-genre-seeds`, {\n            headers: {\n                'Authorization': 'Bearer ' + accessToken\n            }\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.genres;\n        };\n    }\n);\n\nexport const getSuggestions = createAsyncThunk(\n    'music/getSuggestions',\n    async ({ accessToken, genres }) => {\n        if (genres.length === 0) {\n            return [];\n        } else {\n            const queryString = genres.join();\n            const response = await fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${queryString}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                }\n            });\n            if (response.ok) {\n                const jsonResponse = await response.json();\n                let tracks = jsonResponse.tracks.map(track => {\n                    let trackInfo = {\n                        'id': track.id,\n                        'name': track.name,\n                        'artist': track.artists[0].name,\n                        'album': track.album.name,\n                        'uri': track.uri,\n                        'images': track.album.images\n                    };\n                    return trackInfo;\n                });\n                return tracks;\n            };\n        };\n    }\n);\n\nconst musicSlice = createSlice({\n    name: 'music',\n    initialState: {\n        accessToken: '',\n        availableGenres: [],\n        suggestions: []\n    },\n    reducers: {\n        resetMusicDetails: (state, action) => {\n            state.accessToken = '';\n            state.availableGenres = [];\n            state.suggestions = [];\n        }\n    },\n    extraReducers: {\n        [getAccessToken.fulfilled]: (state, action) => {\n            state.accessToken = action.payload;\n        },\n        [getAvailableGenres.fulfilled]: (state, action) => {\n            state.availableGenres = action.payload;\n        },\n        [getSuggestions.fulfilled]: (state, action) => {\n            state.suggestions = action.payload;\n        }\n    }\n});\n\nexport const selectAccessToken = state => state.music.accessToken;\nexport const selectAvailableGenres = state => state.music.availableGenres;\nexport const selectSuggestions = state => state.music.suggestions;\nexport const { resetMusicDetails } = musicSlice.actions;\nconst musicReducer = musicSlice.reducer;\nexport default musicReducer;","import { useSelector } from 'react-redux';\nimport GenreOption from '../GenreOption/GenreOption';\nimport { showCheckboxes } from '../../utils/helperFunctions/showCheckboxes';\nimport { selectAvailableGenres } from '../../utils/state/musicSlice';\nimport './GenreDropdown.css';\n\nexport default function GenreDropdown() {\n    const genreOptions = useSelector(selectAvailableGenres);\n\n    return (\n        <form>\n            <div className=\"multiselect\">\n                <div className=\"selectBox\" onClick={showCheckboxes}>\n                    <select id=\"genre-dropdown\" className=\"form-select\">\n                        <option>Select genres (max 5)</option>\n                    </select>\n                    <div className=\"overSelect\"></div>\n                </div>\n                <div id=\"genres\">\n                    {genreOptions.map(genre => {\n                        return <GenreOption key={genre} genre={genre} />\n                    })}\n                </div>\n            </div>\n        </form>\n    );\n};","import './Subnav.css';\nimport GenreDropdown from '../GenreDropdown/GenreDropdown';\n\nexport default function Subnav() {\n    return (\n        <div id=\"subnav\">\n            <GenreDropdown />\n\n            <form>\n                <input className=\"form-control\" id=\"search\" type=\"search\" placeholder=\"Search...\"></input>\n            </form>\n        </div>\n    );\n};","import Subnav from '../Subnav/Subnav';\nimport './Dashboard.css';\n\nexport default function Dashboard() {\n    return (\n        <div id=\"dashboard\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Dashboard</p>\n            </div>\n        </div>\n    );\n};","import './Suggestion.css';\n\nexport default function Suggestion(props) {\n    const track = props.track;\n\n    return (\n        <div className=\"track\">\n            <img src={track.images[2].url} alt={track.name} />\n            <h6 className=\"track-info\">\n                {track.name}\n            </h6>\n            <h6 className=\"track-info\">\n                {track.artist}\n            </h6>\n        </div>\n    );\n};","import { useSelector } from \"react-redux\";\nimport { selectSuggestions } from \"../../utils/state/musicSlice\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport Subnav from \"../Subnav/Subnav\";\nimport './Suggestions.css';\n\nexport default function Suggestions() {\n    const suggestions = useSelector(selectSuggestions);\n\n    let content;\n    if (suggestions.length === 0) {\n        content =\n            <div id=\"suggestions\">\n                <Subnav />\n                <div className=\"content\">\n                    <div>\n                        Select genres to see suggestions.\n                    </div>\n                </div>\n            </div>;\n    } else {\n        content =\n            <div id=\"suggestions\">\n                <Subnav />\n                <div className=\"content\">\n                    {suggestions.map(track => {\n                        return <Suggestion key={track.id} track={track} />\n                    })}\n                </div>\n            </div>;\n    };\n\n    return (\n        content\n    );\n};","import Subnav from \"../Subnav/Subnav\";\nimport './Forum.css';\n\nexport default function Forum() {\n    return (\n        <div id=\"forum\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Forum</p>\n            </div>\n        </div>\n    );\n};","import Subnav from \"../Subnav/Subnav\";\nimport './Account.css';\n\nexport default function Account() {\n    return (\n        <div id=\"account\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Account</p>\n            </div>\n        </div>\n    );\n};","export const getGenres = async () => {\n    const response = await fetch(`/genres`, {\n        mode: \"cors\",\n        credentials: \"include\"\n    });\n    if (response.ok) {\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","export const updateGenres = async (genres) => {\n    await fetch(`/user`, {\n        method: \"PUT\",\n        mode: \"cors\",\n        credentials: \"include\",\n        body: JSON.stringify(genres),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n};","export default __webpack_public_path__ + \"static/media/inverted-logo.31f83cb9.png\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const requestLogin = createAsyncThunk(\n    'preLogin/requestLogin',\n    async ({ email, password }) => {\n        const data = {\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/authenticate`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            return {\n                signedIn: true,\n                message: ''\n            };\n        } else {\n            const jsonResponse = await response.json();\n            return {\n                signedIn: false,\n                message: jsonResponse.message\n            };\n        };\n    }\n);\n\nexport const logout = createAsyncThunk(\n    'preLogin/logout',\n    async () => {\n        const response = await fetch(`/logout`, {\n            method: \"GET\",\n            credentials: 'include',\n            mode: \"cors\"\n        });\n        if (response.ok) {\n            window.location.reload();\n            return false;\n        };\n        return true;\n    }\n);\n\nconst preLoginSlice = createSlice({\n    name: 'preLogin',\n    initialState: {\n        registering: false,\n        signedIn: false,\n        message: ''\n    },\n    reducers: {\n        setRegistering: (state, action) => {\n            state.registering = action.payload;\n        },\n        setMessage: (state, action) => {\n            state.message = action.payload.message;\n        }\n    },\n    extraReducers: {\n        [requestLogin.fulfilled]: (state, action) => {\n            state.signedIn = action.payload.signedIn;\n            state.message = action.payload.message;\n        },\n        [logout.fulfilled]: (state, action) => {\n            state.signedIn = action.payload;\n        }\n    }\n});\n\nexport const selectRegistering = state => state.preLogin.registering;\nexport const selectSignedIn = state => state.preLogin.signedIn;\nexport const selectMessage = state => state.preLogin.message;\nexport const { setRegistering, setMessage } = preLoginSlice.actions;\nconst preLoginReducer = preLoginSlice.reducer;\nexport default preLoginReducer;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Suggestions from \"../Suggestions/Suggestions\";\nimport Forum from \"../Forum/Forum\";\nimport Account from \"../Account/Account\";\nimport './SignedIn.css';\nimport { getGenres } from '../../utils/helperFunctions/getGenres';\nimport { updateGenres } from '../../utils/helperFunctions/updateGenres';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectEmail, selectFirstName, selectLastName, selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport { getAccessToken, getAvailableGenres, getSuggestions, selectAccessToken } from \"../../utils/state/musicSlice\";\nimport logo from '../../assets/inverted-logo.png';\nimport { logout } from '../../utils/state/preLoginSlice';\nimport { resetUserDetails } from '../../utils/state/userSlice';\nimport { resetMusicDetails } from '../../utils/state/musicSlice';\n\nexport default function SignedIn() {\n  const dispatch = useDispatch();\n  const genres = useSelector(selectGenres);\n  const userEmail = useSelector(selectEmail);\n  const userFirstName = useSelector(selectFirstName);\n  const userLastName = useSelector(selectLastName);\n  const accessToken = useSelector(selectAccessToken);\n\n  const handleLogout = e => {\n    e.preventDefault();\n    dispatch(resetUserDetails());\n    dispatch(resetMusicDetails());\n    dispatch(logout());\n  };\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      window.pendo.initialize({\n        disableCookies: true,\n        visitor: {\n          id: userEmail,\n          email: userEmail,\n          full_name: `${userFirstName} ${userLastName}`,\n          return_url: 'https://shut-up-and-dance.herokuapp.com/dashboard'\n        },\n        account: {\n          id: userEmail,\n          name: userEmail,\n          is_paying: false,\n          monthly_value: 0\n        }\n      });\n    };\n  }, [userEmail, userFirstName, userLastName]);\n\n  useEffect(() => {\n    if (accessToken === '' & userEmail !== '') {\n      dispatch(getAccessToken());\n    };\n    if (accessToken !== '') {\n      dispatch(getAvailableGenres({\n        accessToken: accessToken\n      }));\n    };\n  }, [accessToken, dispatch, userEmail]);\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      getGenres().then(data => {\n        for (let i = 0; i < data.length; i++) {\n          dispatch(setGenres(data[i]));\n        };\n      });\n    };\n  }, [dispatch, userEmail]);\n\n  useEffect(() => {\n    if (accessToken !== '') {\n      dispatch(getSuggestions({\n        accessToken: accessToken,\n        genres: genres\n      }));\n    };\n  }, [genres, accessToken, dispatch]);\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      updateGenres(genres);\n    };\n  }, [genres, userEmail]);\n\n  return (\n    <Router>\n\n      <Redirect to=\"/dashboard\" />\n\n      <nav id=\"sidebar\">\n        <ul id=\"nav-list\">\n          <li className=\"icon-element\">\n            <NavLink to=\"/dashboard\">\n              <img src={logo} alt=\"logo\" id=\"logo\" />\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/dashboard\" className=\"nav-option\">\n              <i className=\"bi bi-house-fill nav-icon dashboard-button\"></i>\n              <p className=\"nav-title\">Dashboard</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/suggestions\" className=\"nav-option\">\n              <i className=\"bi bi-music-note-beamed nav-icon suggestions-button\"></i>\n              <p className=\"nav-title\">Suggestions</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/forum\" className=\"nav-option\">\n              <i className=\"bi bi-chat-fill nav-icon forum-button\"></i>\n              <p className=\"nav-title\">Forum</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/account\" className=\"nav-option\">\n              <i className=\"bi bi-person-fill nav-icon account-button\"></i>\n              <p className=\"nav-title\">Account</p>\n            </NavLink>\n          </li>\n        </ul>\n\n        <button className=\"nav-option\" id=\"logout\" onClick={handleLogout}>\n          <i className=\"bi bi-box-arrow-left nav-icon\"></i>\n          <p className=\"nav-title\">Log Out</p>\n        </button>\n      </nav>\n        \n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      \n        <Route path=\"/suggestions\">\n          <Suggestions />\n        </Route>\n      \n        <Route path=\"/forum\">\n          <Forum />\n        </Route>\n      \n        <Route path=\"/Account\">\n          <Account />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","export const showMessages = () => {\n    const message = document.getElementById(\"message\");\n    message.style.visibility = \"visible\";\n};","import { useEffect, useState } from 'react';\nimport './Login.css';\nimport { requestLogin, setRegistering, selectMessage, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showMessages } from '../../utils/helperFunctions/showMessages';\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const handleLoginSubmit = e => {\n        e.preventDefault();\n        dispatch(requestLogin({\n            email: email,\n            password: password\n        }));\n    };\n\n    const handleRegSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(true));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        showMessages();\n    }, [message]);\n\n    return (\n        <div id=\"login\">\n            <div className=\"overlay\"></div>\n            <p id=\"message\">{message}</p>\n            <form id=\"login-form\" onSubmit={handleLoginSubmit}>\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control login-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control login-element\" onChange={updatePassword} required />\n                <button id=\"login-button\" type=\"submit\" className=\"btn btn-outline-light login-element\">\n                    Log In\n                </button>\n            </form>\n            <button onClick={handleRegSwitch} id=\"reg-link\" className=\"btn btn-outline-light login-element\">Don't have an account? Click here to sign up.</button>\n        </div>\n    );\n};","export const submitRegistration = async (firstName, lastName, email, password, validatedPassword) => {\n    if (password !== validatedPassword) {\n        return {\n            message: 'Passwords do not match.'\n        };\n    } else {\n        const data = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/register`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse;\n        };\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","import './Register.css';\nimport { selectMessage, setRegistering, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { submitRegistration } from '../../utils/helperFunctions/submitRegistration';\nimport { showMessages } from '../../utils/helperFunctions/showMessages';\n\nexport default function Register() {\n    const dispatch = useDispatch();\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [validatedPassword, setValidatedPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateFirstName = e => {\n        e.preventDefault();\n        setFirstName(e.target.value);\n    };\n\n    const updateLastName = e => {\n        e.preventDefault();\n        setLastName(e.target.value);\n    };\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const updateValidatedPassword = e => {\n        e.preventDefault();\n        setValidatedPassword(e.target.value);\n    };\n\n    const handleRegRequest = async (e) => {\n        e.preventDefault();\n        const response = await submitRegistration(firstName, lastName, email, password, validatedPassword);\n        dispatch(setMessage({\n            message: response.message\n        }));\n    };\n\n    const handleLoginSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(false));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        if (message === 'Account created successfully.') {\n            dispatch(setRegistering(false));\n        } else {\n            showMessages();\n        };\n    }, [message, dispatch]);\n\n    return (\n        <div id=\"reg\">\n            <div className=\"overlay\"></div>\n            <p id=\"message\">{message}</p>\n            <form id=\"reg-form\" onSubmit={handleRegRequest}>\n                <input type=\"text\" placeholder=\"Enter your first name\" className=\"form-control reg-element\" onChange={updateFirstName} required />\n                <input type=\"text\" placeholder=\"Enter your last name\" className=\"form-control reg-element\" onChange={updateLastName} required />\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control reg-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control reg-element\" onChange={updatePassword} required />\n                <input type=\"password\" placeholder=\"Validate your password\" className=\"form-control reg-element\" onChange={updateValidatedPassword} required />\n                <button id=\"reg-button\" type=\"submit\" className=\"btn btn-outline-light\">\n                    Register\n                </button>\n            </form>\n            <button id=\"login-link\" className=\"btn btn-outline-light reg-element\" onClick={handleLoginSwitch}>Already have an account? Click here to log in.</button>\n        </div>\n    );\n};","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport SignedIn from \"./components/SignedIn/SignedIn\";\nimport Login from \"./components/Login/Login\";\nimport { selectSignedIn, requestLogin, selectRegistering } from \"./utils/state/preLoginSlice\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Register from \"./components/Register/Register\";\nimport { getUserDetails } from \"./utils/state/userSlice\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const registering = useSelector(selectRegistering);\n  const signedIn = useSelector(selectSignedIn);\n\n  if (window.location.protocol !== 'https:') {\n    window.location.replace(`https:${window.location.href.substring(window.location.protocol.length)}`);\n  };\n\n  useEffect(() => {\n    if (document.cookie !== \"\" & !signedIn) {\n      dispatch(requestLogin());\n    };\n  });\n\n  useEffect(() => {\n    if (signedIn) {\n      dispatch(getUserDetails());\n    };\n  });\n\n  return (\n    <Router>\n\n      {signedIn && <Redirect to=\"/signedin\" />}\n      {registering && <Redirect to=\"/register\" />}\n      {!signedIn && !registering && <Redirect to=\"/login\" />}\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      \n        <Route path=\"/signedin\">\n          <SignedIn />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport preLoginReducer from './preLoginSlice';\nimport { combineReducers } from 'redux';\nimport userReducer from './userSlice';\nimport musicReducer from './musicSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst rootReducer = combineReducers({\n  preLogin: preLoginReducer,\n  user: userReducer,\n  music: musicReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    })\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { persistor, store } from './utils/state/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}