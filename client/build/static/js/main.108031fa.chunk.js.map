{"version":3,"sources":["utils/state/userSlice.js","components/Dashboard/Dashboard.js","utils/state/musicSlice.js","components/Suggestion/Suggestion.js","components/GenreOption/GenreOption.js","utils/helperFunctions/toggleCheckboxes.js","components/GenreDropdown/GenreDropdown.js","components/Suggestions/Suggestions.js","components/Forum/Forum.js","utils/helperFunctions/showMessage.js","utils/helperFunctions/updateUserDetails.js","components/Account/Account.js","utils/helperFunctions/getGenres.js","utils/helperFunctions/updateGenres.js","assets/inverted-logo.png","utils/state/preLoginSlice.js","components/SignedIn/SignedIn.js","components/Login/Login.js","utils/helperFunctions/submitRegistration.js","components/Register/Register.js","App.js","utils/state/store.js","index.js"],"names":["getUserDetails","createAsyncThunk","a","fetch","mode","credentials","response","ok","json","jsonResponse","firstName","lastName","email","userSlice","createSlice","name","initialState","genres","reducers","resetUserDetails","state","action","setGenres","indexOf","payload","length","newGenres","filter","genre","extraReducers","fulfilled","selectFirstName","user","selectLastName","selectEmail","selectGenres","actions","userReducer","reducer","Dashboard","useSelector","id","className","getAccessToken","authString","btoa","process","method","headers","body","access_token","getAvailableGenres","accessToken","getSuggestions","queryString","join","tracks","map","track","artists","album","uri","images","musicSlice","availableGenres","suggestions","resetMusicDetails","selectAccessToken","music","selectAvailableGenres","selectSuggestions","musicReducer","Suggestion","props","src","url","alt","artist","GenreOption","selectedGenres","dispatch","useDispatch","htmlFor","type","value","toLowerCase","onClick","e","target","checked","includes","readOnly","expanded","showCheckboxes","checkboxes","document","getElementById","style","display","hideCheckboxes","isActive","labels","getElementsByClassName","i","matches","GenreDropdown","genreOptions","useState","searchTerm","setSearchTerm","filteredGenres","onFocus","onBlur","placeholder","onChange","preventDefault","Suggestions","content","Forum","showMessage","message","messageBox","createElement","classList","add","toDisplay","createTextNode","appendChild","setTimeout","removeChild","showInvertedMessage","updateUserDetails","details","JSON","stringify","Account","newFirstName","setNewFirstName","newLastName","setNewLastName","newEmail","setNewEmail","newPassword","setNewPassword","confirmedPassword","setConfirmedPassword","onSubmit","password","then","required","getGenres","updateGenres","requestLogin","data","signedIn","logout","window","location","reload","preLoginSlice","registering","setRegistering","setMessage","selectRegistering","preLogin","selectSignedIn","selectMessage","preLoginReducer","SignedIn","userEmail","userFirstName","userLastName","isFirstRenderForUpdate","useRef","isFirstRenderForFetch","useEffect","pendo","initialize","disableCookies","visitor","full_name","return_url","account","is_paying","monthly_value","current","equality","to","logo","path","Login","setEmail","setPassword","submitRegistration","validatedPassword","Register","setFirstName","setLastName","setValidatedPassword","handleRegRequest","App","protocol","replace","href","substring","cookie","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.108031fa.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getUserDetails = createAsyncThunk(\n    'user/getUserDetails',\n    async () => {\n        const response = await fetch(`/user`, {\n            mode: \"cors\",\n            credentials: \"include\",\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return {\n                firstName: jsonResponse.firstName,\n                lastName: jsonResponse.lastName,\n                email: jsonResponse.email\n            };\n        }\n    }\n);\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        genres: []\n    },\n    reducers: {\n        resetUserDetails: (state, action) => {\n            state.firstName = '';\n            state.lastName = '';\n            state.email = '';\n            state.genres = [];\n        },\n        setGenres: (state, action) => {\n            if (state.genres.indexOf(action.payload) === -1 & state.genres.length < 5) {\n                return {\n                    ...state,\n                    genres: [...state.genres, action.payload]\n                };\n            } else {\n                const newGenres = state.genres.filter(genre => genre !== action.payload);\n                return {\n                    ...state,\n                    genres: newGenres\n                };\n            };\n        }\n    },\n    extraReducers: {\n        [getUserDetails.fulfilled]: (state, action) => {\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            state.email = action.payload.email;\n        }\n    }\n});\n\nexport const selectFirstName = state => state.user.firstName;\nexport const selectLastName = state => state.user.lastName;\nexport const selectEmail = state => state.user.email;\nexport const selectGenres = state => state.user.genres;\nexport const { resetUserDetails, setGenres } = userSlice.actions;\nconst userReducer = userSlice.reducer;\nexport default userReducer;","import './Dashboard.css';\nimport { selectFirstName } from '../../utils/state/userSlice';\nimport { useSelector } from 'react-redux';\n\nexport default function Dashboard() {\n    const firstName = useSelector(selectFirstName);\n\n    return (\n        <div id=\"dashboard\">\n            <div className=\"heading\">\n                <h3>{firstName}'s Dashboard</h3>\n            </div>\n            <div className=\"content\">\n\n            </div>\n        </div>\n    );\n};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getAccessToken = createAsyncThunk(\n    'music/getAccessToken',\n    async () => {\n        const authString = btoa(`${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`);\n        const response = await fetch(`https://accounts.spotify.com/api/token`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Basic ${authString}`,\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: \"grant_type=client_credentials\"\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.access_token;\n        };\n    }\n);\n\nexport const getAvailableGenres = createAsyncThunk(\n    'music/getAvailableGenres',\n    async ({ accessToken }) => {\n        const response = await fetch(`https://api.spotify.com/v1/recommendations/available-genre-seeds`, {\n            headers: {\n                'Authorization': 'Bearer ' + accessToken\n            }\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.genres;\n        };\n    }\n);\n\nexport const getSuggestions = createAsyncThunk(\n    'music/getSuggestions',\n    async ({ accessToken, genres }) => {\n        if (genres.length === 0) {\n            return [];\n        } else {\n            const queryString = genres.join();\n            const response = await fetch(`https://api.spotify.com/v1/recommendations?limit=5&seed_genres=${queryString}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                }\n            });\n            if (response.ok) {\n                const jsonResponse = await response.json();\n                let tracks = jsonResponse.tracks.map(track => {\n                    let trackInfo = {\n                        'id': track.id,\n                        'name': track.name,\n                        'artist': track.artists[0].name,\n                        'album': track.album.name,\n                        'uri': track.uri,\n                        'images': track.album.images\n                    };\n                    return trackInfo;\n                });\n                return tracks;\n            };\n        };\n    }\n);\n\nconst musicSlice = createSlice({\n    name: 'music',\n    initialState: {\n        accessToken: '',\n        availableGenres: [],\n        suggestions: []\n    },\n    reducers: {\n        resetMusicDetails: (state, action) => {\n            state.accessToken = '';\n            state.availableGenres = [];\n            state.suggestions = [];\n        }\n    },\n    extraReducers: {\n        [getAccessToken.fulfilled]: (state, action) => {\n            state.accessToken = action.payload;\n        },\n        [getAvailableGenres.fulfilled]: (state, action) => {\n            state.availableGenres = action.payload;\n        },\n        [getSuggestions.fulfilled]: (state, action) => {\n            state.suggestions = action.payload;\n        }\n    }\n});\n\nexport const selectAccessToken = state => state.music.accessToken;\nexport const selectAvailableGenres = state => state.music.availableGenres;\nexport const selectSuggestions = state => state.music.suggestions;\nexport const { resetMusicDetails } = musicSlice.actions;\nconst musicReducer = musicSlice.reducer;\nexport default musicReducer;","import './Suggestion.css';\n\nexport default function Suggestion(props) {\n    const track = props.track;\n\n    return (\n        <div className=\"track\">\n            <img src={track.images[2].url} alt={track.name} />\n            <h6 className=\"track-info\">\n                {track.name}\n            </h6>\n            <h6 className=\"track-info\">\n                {track.artist}\n            </h6>\n        </div>\n    );\n};","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport './GenreOption.css';\n\nexport default function GenreOption(props) {\n    const genre = props.genre;\n    const selectedGenres = useSelector(selectGenres);\n    const dispatch = useDispatch();\n\n    const handleGenreSelect = e => {\n        dispatch(setGenres(e.target.value));\n    };\n\n    return (\n        <label htmlFor={genre} className=\"genre-label\">\n            <input\n                className=\"genre-checkbox\"\n                type=\"checkbox\"\n                id={genre}\n                value={genre.toLowerCase()}\n                onClick={handleGenreSelect}\n                checked={selectedGenres.includes(genre.toLowerCase())}\n                readOnly />\n            <p className=\"genre\">{genre}</p>\n        </label>\n    );\n};","let expanded = false;\n\nexport const showCheckboxes = () => {\n    const checkboxes = document.getElementById(\"genres\");\n    if (!expanded) {\n        checkboxes.style.display = \"block\";\n        expanded = true;\n    };\n};\n\nexport const hideCheckboxes = () => {\n    const checkboxes = document.getElementById(\"genres\");\n    const labels = document.getElementsByClassName('genre-label');\n    let isActive;\n    for (let i = 0; i < labels.length; i++) {\n        if (labels[i].matches(':hover')) {\n            isActive = true;\n        };\n    };\n    if (expanded & !isActive) {\n        checkboxes.style.display = \"none\";\n        expanded = false;\n    };\n};","import { useSelector } from 'react-redux';\nimport GenreOption from '../GenreOption/GenreOption';\nimport { hideCheckboxes, showCheckboxes } from '../../utils/helperFunctions/toggleCheckboxes';\nimport { selectAvailableGenres } from '../../utils/state/musicSlice';\nimport './GenreDropdown.css';\nimport { useState } from 'react';\n\nexport default function GenreDropdown() {\n    const genreOptions = useSelector(selectAvailableGenres);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleSearch = e => {\n        e.preventDefault();\n        setSearchTerm(e.target.value);\n    };\n\n    const filteredGenres = genreOptions.filter(genre => {\n        return genre.includes(searchTerm.toLowerCase())\n    });\n\n    return (\n        <form id=\"search\" onFocus={showCheckboxes} onBlur={hideCheckboxes}>\n            <div className=\"multiselect\">\n                <input className=\"form-control\" type=\"search\" placeholder=\"Select genres... (max 5)\" onChange={handleSearch}></input>\n                <div id=\"genres\">\n                    {filteredGenres.map(genre => {\n                        return <GenreOption key={genre} genre={genre} />\n                    })}\n                </div>\n            </div>\n        </form>\n    );\n};","import { useSelector } from \"react-redux\";\nimport { selectSuggestions } from \"../../utils/state/musicSlice\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport './Suggestions.css';\nimport GenreDropdown from '../GenreDropdown/GenreDropdown';\nimport { selectFirstName } from \"../../utils/state/userSlice\";\n\nexport default function Suggestions() {\n    const suggestions = useSelector(selectSuggestions);\n    const firstName = useSelector(selectFirstName);\n\n    let content;\n    if (suggestions.length === 0) {\n        content =\n            <div className=\"suggestions-content\">\n                <div>\n                    Select genres to see suggestions.\n                </div>\n            </div>;\n    } else {\n        content =\n            <div className=\"suggestions-content\">\n                {suggestions.map(track => {\n                    return <Suggestion key={track.id} track={track} />\n                })}\n            </div>;\n    };\n\n    return (\n        <div id=\"suggestions\">\n            <div className=\"heading\">\n                <h3>{firstName}'s Suggestions</h3>\n                <GenreDropdown />\n            </div>\n            {content}\n        </div>\n    );\n};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFirstName } from '../../utils/state/userSlice';\nimport './Forum.css';\n\nexport default function Forum() {\n    const firstName = useSelector(selectFirstName);\n    const [/*searchTerm*/, setSearchTerm] = useState('');\n\n    const handleSearch = e => {\n        e.preventDefault();\n        setSearchTerm(e.target.value);\n    };\n\n    return (\n        <div id=\"forum\">\n            <div className=\"heading\">\n                <h3>{firstName}'s Forum</h3>\n                <form>\n                    <input className=\"form-control\" id=\"search\" type=\"search\" placeholder=\"Search posts...\" onChange={handleSearch}></input>\n                </form>\n            </div>\n            <div className=\"content\">\n\n            </div>\n        </div>\n    );\n};","export const showMessage = message => {\n    const messageBox = document.createElement('div');\n    messageBox.id = 'message';\n    messageBox.classList.add(\"animate__animated\");\n    messageBox.classList.add(\"animate__fadeIn\");\n    const toDisplay = document.createTextNode(message);\n    messageBox.appendChild(toDisplay);\n    document.getElementById('root').appendChild(messageBox);\n    setTimeout(() => {\n        messageBox.classList.add(\"animate__fadeOut\");\n    }, 3000);\n    setTimeout(() => {\n        document.getElementById('root').removeChild(messageBox);\n    }, 5000);\n};\n\nexport const showInvertedMessage = message => {\n    const messageBox = document.createElement('div');\n    messageBox.id = 'message-inverted';\n    messageBox.classList.add(\"animate__animated\");\n    messageBox.classList.add(\"animate__fadeIn\");\n    const toDisplay = document.createTextNode(message);\n    messageBox.appendChild(toDisplay);\n    document.getElementById('root').appendChild(messageBox);\n    setTimeout(() => {\n        messageBox.classList.add(\"animate__fadeOut\");\n    }, 3000);\n    setTimeout(() => {\n        document.getElementById('root').removeChild(messageBox);\n    }, 5000);\n};","import { showMessage } from \"./showMessage\";\n\nexport const updateUserDetails = async (details) => {\n    const response = await fetch(`/user`, {\n        method: \"PUT\",\n        mode: \"cors\",\n        credentials: \"include\",\n        body: JSON.stringify(details),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (response.ok) {\n        showMessage(`User details updated.`);\n    } else {\n        showMessage(`User details not updated.`);\n    };\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showMessage } from '../../utils/helperFunctions/showMessage';\nimport { updateUserDetails } from '../../utils/helperFunctions/updateUserDetails';\nimport { getUserDetails, selectEmail, selectFirstName, selectLastName } from '../../utils/state/userSlice';\nimport './Account.css';\n\nexport default function Account() {\n    const firstName = useSelector(selectFirstName);\n    const lastName = useSelector(selectLastName);\n    const email = useSelector(selectEmail);\n    const [newFirstName, setNewFirstName] = useState(firstName);\n    const [newLastName, setNewLastName] = useState(lastName);\n    const [newEmail, setNewEmail] = useState(email);\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n    const dispatch = useDispatch();\n\n    const handleFirstNameChange = e => {\n        e.preventDefault();\n        setNewFirstName(e.target.value);\n    };\n\n    const handleLastNameChange = e => {\n        e.preventDefault();\n        setNewLastName(e.target.value);\n    };\n    \n    const handleEmailChange = e => {\n        e.preventDefault();\n        setNewEmail(e.target.value);\n    };\n\n    const handlePasswordChange = e => {\n        e.preventDefault();\n        setNewPassword(e.target.value);\n    };\n\n    const handleConfirmedPasswordChange = e => {\n        e.preventDefault();\n        setConfirmedPassword(e.target.value);\n    };\n\n    const handleDetailsSave = e => {\n        e.preventDefault();\n        if (newPassword === confirmedPassword) {\n            const details = {\n                firstName: newFirstName,\n                lastName: newLastName,\n                email: newEmail,\n                password: newPassword\n            };\n            updateUserDetails(details)\n                .then(() => {\n                    dispatch(getUserDetails());\n                });\n        } else {\n            showMessage(`Passwords don't match.`);\n        };\n    };\n\n    return (\n        <div id=\"account\">\n            <div className=\"heading\">\n                <h3>{firstName}'s Account</h3>\n            </div>\n            <div className=\"account-content\">\n                <h5 className=\"sub-heading\">Amend your account details below:</h5>\n                <form id=\"account-form\" onSubmit={handleDetailsSave}>\n                    <div className=\"account-form-element\">\n                        <label htmlFor=\"first-name\">First Name:</label>\n                        <input className=\"account-input form-control\" type=\"text\" value={newFirstName} id=\"first-name\" onChange={handleFirstNameChange} required></input>\n                    </div>\n                    <div className=\"account-form-element\">\n                        <label htmlFor=\"last-name\">Last Name:</label>\n                        <input className=\"account-input form-control\" type=\"text\" value={newLastName} id=\"last-name\" onChange={handleLastNameChange} required></input>\n                    </div>\n                    <div className=\"account-form-element\">\n                        <label htmlFor=\"email\">Email Address:</label>\n                        <input className=\"account-input form-control\" type=\"email\" value={newEmail} id=\"email\" onChange={handleEmailChange} required></input>\n                    </div>\n                    <div className=\"account-form-element\">\n                        <label htmlFor=\"password\">New Password:</label>\n                        <input className=\"account-input form-control\" type=\"password\" id=\"password\" onChange={handlePasswordChange}></input>\n                    </div>\n                    <div className=\"account-form-element\">\n                        <label htmlFor=\"confirmed-password\">Confirm Password:</label>\n                        <input className=\"account-input form-control\" type=\"password\" id=\"confirmed-password\" onChange={handleConfirmedPasswordChange}></input>\n                    </div>\n\n                    <button className=\"account-submit btn\" type=\"submit\">\n                        Save\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};","export const getGenres = async () => {\n    const response = await fetch(`/genres`, {\n        mode: \"cors\",\n        credentials: \"include\"\n    });\n    if (response.ok) {\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","export const updateGenres = async (genres) => {\n    await fetch(`/userGenres`, {\n        method: \"PUT\",\n        mode: \"cors\",\n        credentials: \"include\",\n        body: JSON.stringify(genres),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n};","export default __webpack_public_path__ + \"static/media/inverted-logo.31f83cb9.png\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const requestLogin = createAsyncThunk(\n    'preLogin/requestLogin',\n    async ({ email, password }) => {\n        const data = {\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/authenticate`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            return {\n                signedIn: true,\n                message: ''\n            };\n        } else {\n            const jsonResponse = await response.json();\n            return {\n                signedIn: false,\n                message: jsonResponse.message\n            };\n        };\n    }\n);\n\nexport const logout = createAsyncThunk(\n    'preLogin/logout',\n    async () => {\n        const response = await fetch(`/logout`, {\n            method: \"GET\",\n            credentials: 'include',\n            mode: \"cors\"\n        });\n        if (response.ok) {\n            window.location.reload();\n            return false;\n        };\n        return true;\n    }\n);\n\nconst preLoginSlice = createSlice({\n    name: 'preLogin',\n    initialState: {\n        registering: false,\n        signedIn: false,\n        message: ''\n    },\n    reducers: {\n        setRegistering: (state, action) => {\n            state.registering = action.payload;\n        },\n        setMessage: (state, action) => {\n            state.message = action.payload.message;\n        }\n    },\n    extraReducers: {\n        [requestLogin.fulfilled]: (state, action) => {\n            state.signedIn = action.payload.signedIn;\n            state.message = action.payload.message;\n        },\n        [logout.fulfilled]: (state, action) => {\n            state.signedIn = action.payload;\n        }\n    }\n});\n\nexport const selectRegistering = state => state.preLogin.registering;\nexport const selectSignedIn = state => state.preLogin.signedIn;\nexport const selectMessage = state => state.preLogin.message;\nexport const { setRegistering, setMessage } = preLoginSlice.actions;\nconst preLoginReducer = preLoginSlice.reducer;\nexport default preLoginReducer;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Suggestions from \"../Suggestions/Suggestions\";\nimport Forum from \"../Forum/Forum\";\nimport Account from \"../Account/Account\";\nimport './SignedIn.css';\nimport { getGenres } from '../../utils/helperFunctions/getGenres';\nimport { updateGenres } from '../../utils/helperFunctions/updateGenres';\nimport { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectEmail, selectFirstName, selectLastName, selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport { getAccessToken, getAvailableGenres, getSuggestions, selectAccessToken } from \"../../utils/state/musicSlice\";\nimport logo from '../../assets/inverted-logo.png';\nimport { logout } from '../../utils/state/preLoginSlice';\nimport { resetUserDetails } from '../../utils/state/userSlice';\nimport { resetMusicDetails } from '../../utils/state/musicSlice';\n\nexport default function SignedIn() {\n  const dispatch = useDispatch();\n  const genres = useSelector(selectGenres);\n  const userEmail = useSelector(selectEmail);\n  const userFirstName = useSelector(selectFirstName);\n  const userLastName = useSelector(selectLastName);\n  const accessToken = useSelector(selectAccessToken);\n  const isFirstRenderForUpdate = useRef(true);\n  const isFirstRenderForFetch = useRef(true);\n\n  const handleLogout = e => {\n    e.preventDefault();\n    dispatch(resetUserDetails());\n    dispatch(resetMusicDetails());\n    dispatch(logout());\n  };\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      window.pendo.initialize({\n        disableCookies: true,\n        visitor: {\n          id: userEmail,\n          email: userEmail,\n          full_name: `${userFirstName} ${userLastName}`,\n          return_url: 'https://shut-up-and-dance.herokuapp.com/dashboard'\n        },\n        account: {\n          id: userEmail,\n          name: userEmail,\n          is_paying: false,\n          monthly_value: 0\n        }\n      });\n    };\n  }, [userEmail, userFirstName, userLastName]);\n\n  useEffect(() => {\n    if (accessToken === '' & userEmail !== '') {\n      dispatch(getAccessToken());\n    };\n    if (accessToken !== '') {\n      dispatch(getAvailableGenres({\n        accessToken: accessToken\n      }));\n    };\n  }, [accessToken, dispatch, userEmail]);\n\n  useEffect(() => {\n    if (isFirstRenderForFetch.current) {\n      getGenres()\n        .then(data => {\n          let equality = true;\n          for (let i = 0; i < data.length; i++) {\n            if (data[i] !== genres[i]) {\n              equality = false;\n            };\n          };\n          if (data.length === genres.length & equality) {\n            return;\n          } else {\n            for (let i = 0; i < data.length; i++) {\n              dispatch(setGenres(data[i]));\n            };\n          };\n        });\n      isFirstRenderForFetch.current = false;\n    };\n  }, [dispatch, genres]);\n\n  useEffect(() => {\n    if (accessToken !== '') {\n      dispatch(getSuggestions({\n        accessToken: accessToken,\n        genres: genres\n      }));\n    };\n  }, [genres, accessToken, dispatch]);\n\n  useEffect(() => {\n    if (isFirstRenderForUpdate.current) {\n      isFirstRenderForUpdate.current = false;\n    } else {\n      updateGenres(genres);\n    };\n  }, [genres]);\n\n  return (\n    <Router>\n\n      <Redirect to=\"/dashboard\" />\n\n      <nav id=\"sidebar\">\n        <ul id=\"nav-list\">\n          <li className=\"icon-element\">\n            <NavLink to=\"/dashboard\">\n              <img src={logo} alt=\"logo\" id=\"logo\" />\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/dashboard\" className=\"nav-option\">\n              <i className=\"bi bi-house-fill nav-icon dashboard-button\"></i>\n              <p className=\"nav-title\">Dashboard</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/suggestions\" className=\"nav-option\">\n              <i className=\"bi bi-music-note-beamed nav-icon suggestions-button\"></i>\n              <p className=\"nav-title\">Suggestions</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/forum\" className=\"nav-option\">\n              <i className=\"bi bi-chat-fill nav-icon forum-button\"></i>\n              <p className=\"nav-title\">Forum</p>\n            </NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/account\" className=\"nav-option\">\n              <i className=\"bi bi-person-fill nav-icon account-button\"></i>\n              <p className=\"nav-title\">Account</p>\n            </NavLink>\n          </li>\n        </ul>\n\n        <button className=\"nav-option\" id=\"logout\" onClick={handleLogout}>\n          <i className=\"bi bi-box-arrow-left nav-icon\"></i>\n          <p className=\"nav-title\">Log Out</p>\n        </button>\n      </nav>\n        \n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      \n        <Route path=\"/suggestions\">\n          <Suggestions />\n        </Route>\n      \n        <Route path=\"/forum\">\n          <Forum />\n        </Route>\n      \n        <Route path=\"/Account\">\n          <Account />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","import { useEffect, useState } from 'react';\nimport './Login.css';\nimport { requestLogin, setRegistering, selectMessage, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showInvertedMessage } from '../../utils/helperFunctions/showMessage';\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const handleLoginSubmit = e => {\n        e.preventDefault();\n        dispatch(requestLogin({\n            email: email,\n            password: password\n        }));\n    };\n\n    const handleRegSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(true));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        if (message !== '') {\n            showInvertedMessage(message);\n        };\n    }, [message]);\n\n    return (\n        <div id=\"login\">\n            <div className=\"overlay\"></div>\n            <form id=\"login-form\" onSubmit={handleLoginSubmit}>\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control login-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control login-element\" onChange={updatePassword} required />\n                <button id=\"login-button\" type=\"submit\" className=\"btn btn-outline-light login-element\">\n                    Log In\n                </button>\n            </form>\n            <button onClick={handleRegSwitch} id=\"reg-link\" className=\"btn btn-outline-light login-element\">Don't have an account? Click here to sign up.</button>\n        </div>\n    );\n};","export const submitRegistration = async (firstName, lastName, email, password, validatedPassword) => {\n    if (password !== validatedPassword) {\n        return {\n            message: 'Passwords do not match.'\n        };\n    } else {\n        const data = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/register`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse;\n        };\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","import './Register.css';\nimport { selectMessage, setRegistering, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { submitRegistration } from '../../utils/helperFunctions/submitRegistration';\nimport { showInvertedMessage } from '../../utils/helperFunctions/showMessage';\n\nexport default function Register() {\n    const dispatch = useDispatch();\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [validatedPassword, setValidatedPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateFirstName = e => {\n        e.preventDefault();\n        setFirstName(e.target.value);\n    };\n\n    const updateLastName = e => {\n        e.preventDefault();\n        setLastName(e.target.value);\n    };\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const updateValidatedPassword = e => {\n        e.preventDefault();\n        setValidatedPassword(e.target.value);\n    };\n\n    const handleRegRequest = async (e) => {\n        e.preventDefault();\n        const response = await submitRegistration(firstName, lastName, email, password, validatedPassword);\n        dispatch(setMessage({\n            message: response.message\n        }));\n    };\n\n    const handleLoginSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(false));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        if (message === 'Account created successfully.') {\n            dispatch(setRegistering(false));\n        } else if (message !== '') {\n            showInvertedMessage(message);\n        };\n    }, [message, dispatch]);\n\n    return (\n        <div id=\"reg\">\n            <div className=\"overlay\"></div>\n            <form id=\"reg-form\" onSubmit={handleRegRequest}>\n                <input type=\"text\" placeholder=\"Enter your first name\" className=\"form-control reg-element\" onChange={updateFirstName} required />\n                <input type=\"text\" placeholder=\"Enter your last name\" className=\"form-control reg-element\" onChange={updateLastName} required />\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control reg-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control reg-element\" onChange={updatePassword} required />\n                <input type=\"password\" placeholder=\"Validate your password\" className=\"form-control reg-element\" onChange={updateValidatedPassword} required />\n                <button id=\"reg-button\" type=\"submit\" className=\"btn btn-outline-light\">\n                    Register\n                </button>\n            </form>\n            <button id=\"login-link\" className=\"btn btn-outline-light reg-element\" onClick={handleLoginSwitch}>Already have an account? Click here to log in.</button>\n        </div>\n    );\n};","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport SignedIn from \"./components/SignedIn/SignedIn\";\nimport Login from \"./components/Login/Login\";\nimport { selectSignedIn, requestLogin, selectRegistering } from \"./utils/state/preLoginSlice\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Register from \"./components/Register/Register\";\nimport { getUserDetails } from \"./utils/state/userSlice\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const registering = useSelector(selectRegistering);\n  const signedIn = useSelector(selectSignedIn);\n\n  if (window.location.protocol !== 'https:') {\n    window.location.replace(`https:${window.location.href.substring(window.location.protocol.length)}`);\n  };\n\n  useEffect(() => {\n    if (document.cookie !== \"\" & !signedIn) {\n      dispatch(requestLogin());\n    };\n  });\n\n  useEffect(() => {\n    if (signedIn) {\n      dispatch(getUserDetails());\n    };\n  });\n\n  return (\n    <Router>\n\n      {signedIn && <Redirect to=\"/signedin\" />}\n      {registering && <Redirect to=\"/register\" />}\n      {!signedIn && !registering && <Redirect to=\"/login\" />}\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      \n        <Route path=\"/signedin\">\n          <SignedIn />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport preLoginReducer from './preLoginSlice';\nimport { combineReducers } from 'redux';\nimport userReducer from './userSlice';\nimport musicReducer from './musicSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst rootReducer = combineReducers({\n  preLogin: preLoginReducer,\n  user: userReducer,\n  music: musicReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    })\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { persistor, store } from './utils/state/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}