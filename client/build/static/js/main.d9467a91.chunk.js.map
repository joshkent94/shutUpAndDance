{"version":3,"sources":["utils/state/preLoginSlice.js","utils/state/userSlice.js","components/GenreOption/GenreOption.js","utils/helperFunctions/showCheckboxes.js","utils/state/musicSlice.js","components/GenreDropdown/GenreDropdown.js","components/Subnav/Subnav.js","components/Dashboard/Dashboard.js","components/Recommendation/Recommendation.js","components/Recommendations/Recommendations.js","components/Forum/Forum.js","components/Account/Account.js","utils/helperFunctions/toggleSidebar.js","utils/helperFunctions/getGenres.js","utils/helperFunctions/updateGenres.js","assets/inverted-logo.png","components/SignedIn/SignedIn.js","utils/helperFunctions/showMessages.js","components/Login/Login.js","utils/helperFunctions/submitRegistration.js","components/Register/Register.js","App.js","utils/state/store.js","index.js"],"names":["requestLogin","createAsyncThunk","a","email","password","data","fetch","method","mode","credentials","headers","body","JSON","stringify","response","ok","signedIn","message","json","jsonResponse","logout","preLoginSlice","createSlice","name","initialState","registering","reducers","setRegistering","state","action","payload","setMessage","extraReducers","fulfilled","selectRegistering","preLogin","selectSignedIn","selectMessage","actions","preLoginReducer","reducer","getUserDetails","firstName","lastName","userSlice","genres","resetUserDetails","setGenres","indexOf","length","newGenres","filter","genre","selectEmail","user","selectGenres","userReducer","GenreOption","props","selectedGenres","useSelector","dispatch","useDispatch","htmlFor","className","type","id","value","toLowerCase","onClick","e","target","checked","includes","readOnly","expanded","showCheckboxes","checkboxes","document","getElementById","style","display","getAccessToken","authString","btoa","process","access_token","getAvailableGenres","accessToken","getRecommendations","queryString","join","tracks","map","track","artists","album","uri","images","musicSlice","availableGenres","recommendations","resetMusicDetails","selectAccessToken","music","selectAvailableGenres","selectRecommendations","musicReducer","GenreDropdown","genreOptions","Subnav","placeholder","preventDefault","Dashboard","Recommendation","src","url","alt","artist","Recommendations","Forum","Account","toggleSidebar","sidebar","headings","getElementsByClassName","icons","toggleButton","classList","toggle","contains","setTimeout","i","getGenres","updateGenres","SignedIn","userEmail","useEffect","then","to","logo","path","showMessages","visibility","Login","useState","setEmail","setPassword","onSubmit","onChange","required","submitRegistration","validatedPassword","Register","setFirstName","setLastName","setValidatedPassword","handleRegRequest","App","cookie","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.d9467a91.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const requestLogin = createAsyncThunk(\n    'preLogin/requestLogin',\n    async ({ email, password }) => {\n        const data = {\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/authenticate`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            return {\n                signedIn: true,\n                message: ''\n            };\n        } else {\n            const jsonResponse = await response.json();\n            return {\n                signedIn: false,\n                message: jsonResponse.message\n            };\n        };\n    }\n);\n\nexport const logout = createAsyncThunk(\n    'preLogin/logout',\n    async () => {\n        const response = await fetch(`/logout`, {\n            method: \"GET\",\n            credentials: 'include',\n            mode: \"cors\"\n        });\n        if (response.ok) {\n            return false;\n        };\n        return true;\n    }\n);\n\nconst preLoginSlice = createSlice({\n    name: 'preLogin',\n    initialState: {\n        registering: false,\n        signedIn: false,\n        message: ''\n    },\n    reducers: {\n        setRegistering: (state, action) => {\n            state.registering = action.payload;\n        },\n        setMessage: (state, action) => {\n            state.message = action.payload.message;\n        }\n    },\n    extraReducers: {\n        [requestLogin.fulfilled]: (state, action) => {\n            state.signedIn = action.payload.signedIn;\n            state.message = action.payload.message;\n        },\n        [logout.fulfilled]: (state, action) => {\n            state.signedIn = action.payload;\n        }\n    }\n});\n\nexport const selectRegistering = state => state.preLogin.registering;\nexport const selectSignedIn = state => state.preLogin.signedIn;\nexport const selectMessage = state => state.preLogin.message;\nexport const { setRegistering, setMessage } = preLoginSlice.actions;\nconst preLoginReducer = preLoginSlice.reducer;\nexport default preLoginReducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getUserDetails = createAsyncThunk(\n    'user/getUserDetails',\n    async () => {\n        const response = await fetch(`/user`, {\n            mode: \"cors\",\n            credentials: \"include\",\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return {\n                firstName: jsonResponse.firstName,\n                lastName: jsonResponse.lastName,\n                email: jsonResponse.email\n            };\n        }\n    }\n);\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        genres: []\n    },\n    reducers: {\n        resetUserDetails: (state, action) => {\n            state.firstName = '';\n            state.lastName = '';\n            state.email = '';\n            state.genres = [];\n        },\n        setGenres: (state, action) => {\n            if (state.genres.indexOf(action.payload) === -1 & state.genres.length < 5) {\n                return {\n                    ...state,\n                    genres: [...state.genres, action.payload]\n                };\n            } else {\n                const newGenres = state.genres.filter(genre => genre !== action.payload);\n                return {\n                    ...state,\n                    genres: newGenres\n                };\n            };\n        }\n    },\n    extraReducers: {\n        [getUserDetails.fulfilled]: (state, action) => {\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            state.email = action.payload.email;\n        }\n    }\n});\n\nexport const selectFirstName = state => state.user.firstName;\nexport const selectLastName = state => state.user.lastName;\nexport const selectEmail = state => state.user.email;\nexport const selectGenres = state => state.user.genres;\nexport const { resetUserDetails, setGenres } = userSlice.actions;\nconst userReducer = userSlice.reducer;\nexport default userReducer;","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport './GenreOption.css';\n\nexport default function GenreOption(props) {\n    const genre = props.genre;\n    const selectedGenres = useSelector(selectGenres);\n    const dispatch = useDispatch();\n\n    const handleGenreSelect = e => {\n        dispatch(setGenres(e.target.value));\n    };\n\n    return (\n        <label htmlFor={genre} className=\"genre-label\">\n            <input\n                className=\"genre-checkbox\"\n                type=\"checkbox\"\n                id={genre}\n                value={genre.toLowerCase()}\n                onClick={handleGenreSelect}\n                checked={selectedGenres.includes(genre.toLowerCase())}\n                readOnly />\n            <p className=\"genre\">{genre}</p>\n        </label>\n    );\n};","let expanded = false;\n\nexport const showCheckboxes = () => {\n    const checkboxes = document.getElementById(\"genres\");\n    if (!expanded) {\n        checkboxes.style.display = \"block\";\n        expanded = true;\n    } else {\n        checkboxes.style.display = \"none\";\n        expanded = false;\n    };\n};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getAccessToken = createAsyncThunk(\n    'music/getAccessToken',\n    async () => {\n        const authString = btoa(`${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`);\n        const response = await fetch(`https://accounts.spotify.com/api/token`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Basic ${authString}`,\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: \"grant_type=client_credentials\"\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.access_token;\n        };\n    }\n);\n\nexport const getAvailableGenres = createAsyncThunk(\n    'music/getAvailableGenres',\n    async ({ accessToken }) => {\n        const response = await fetch(`https://api.spotify.com/v1/recommendations/available-genre-seeds`, {\n            headers: {\n                'Authorization': 'Bearer ' + accessToken\n            }\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse.genres;\n        };\n    }\n);\n\nexport const getRecommendations = createAsyncThunk(\n    'music/getRecommendations',\n    async ({ accessToken, genres }) => {\n        if (genres.length === 0) {\n            return [];\n        } else {\n            const queryString = genres.join();\n            const response = await fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${queryString}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                }\n            });\n            if (response.ok) {\n                const jsonResponse = await response.json();\n                let tracks = jsonResponse.tracks.map(track => {\n                    let trackInfo = {\n                        'id': track.id,\n                        'name': track.name,\n                        'artist': track.artists[0].name,\n                        'album': track.album.name,\n                        'uri': track.uri,\n                        'images': track.album.images\n                    };\n                    return trackInfo;\n                });\n                return tracks;\n            };\n        };\n    }\n);\n\nconst musicSlice = createSlice({\n    name: 'music',\n    initialState: {\n        accessToken: '',\n        availableGenres: [],\n        recommendations: []\n    },\n    reducers: {\n        resetMusicDetails: (state, action) => {\n            state.accessToken = '';\n            state.availableGenres = [];\n            state.recommendations = [];\n        }\n    },\n    extraReducers: {\n        [getAccessToken.fulfilled]: (state, action) => {\n            state.accessToken = action.payload;\n        },\n        [getAvailableGenres.fulfilled]: (state, action) => {\n            state.availableGenres = action.payload;\n        },\n        [getRecommendations.fulfilled]: (state, action) => {\n            state.recommendations = action.payload;\n        }\n    }\n});\n\nexport const selectAccessToken = state => state.music.accessToken;\nexport const selectAvailableGenres = state => state.music.availableGenres;\nexport const selectRecommendations = state => state.music.recommendations;\nexport const { resetMusicDetails } = musicSlice.actions;\nconst musicReducer = musicSlice.reducer;\nexport default musicReducer;","import { useSelector } from 'react-redux';\nimport GenreOption from '../GenreOption/GenreOption';\nimport { showCheckboxes } from '../../utils/helperFunctions/showCheckboxes';\nimport { selectAvailableGenres } from '../../utils/state/musicSlice';\nimport './GenreDropdown.css';\n\nexport default function GenreDropdown() {\n    const genreOptions = useSelector(selectAvailableGenres);\n\n    return (\n        <form>\n            <div className=\"multiselect\">\n                <div className=\"selectBox\" onClick={showCheckboxes}>\n                    <select id=\"genre-dropdown\" className=\"form-select\">\n                        <option>Select genres (max 5)</option>\n                    </select>\n                    <div className=\"overSelect\"></div>\n                </div>\n                <div id=\"genres\">\n                    {genreOptions.map(genre => {\n                        return <GenreOption key={genre} genre={genre} />\n                    })}\n                </div>\n            </div>\n        </form>\n    );\n};","import './Subnav.css';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../utils/state/preLoginSlice';\nimport { resetUserDetails } from '../../utils/state/userSlice';\nimport GenreDropdown from '../GenreDropdown/GenreDropdown';\nimport { resetMusicDetails } from '../../utils/state/musicSlice';\n\nexport default function Subnav() {\n    const dispatch = useDispatch();\n\n    const handleLogout = e => {\n        e.preventDefault();\n        dispatch(resetUserDetails());\n        dispatch(resetMusicDetails());\n        dispatch(logout());\n    };\n\n    return (\n        <div id=\"subnav\">\n            <GenreDropdown />\n\n            <form>\n                <input className=\"form-control\" id=\"search\" type=\"search\" placeholder=\"Search...\"></input>\n            </form>\n\n            <button className=\"form-control\" id=\"log-out\" onClick={handleLogout}>\n                Log Out\n            </button>\n        </div>\n    );\n};","import Subnav from '../Subnav/Subnav';\nimport './Dashboard.css';\n\nexport default function Dashboard() {\n    return (\n        <div id=\"dashboard\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Dashboard</p>\n            </div>\n        </div>\n    );\n};","import './Recommendation.css';\n\nexport default function Recommendation(props) {\n    const track = props.track;\n\n    return (\n        <div className=\"track\">\n            <img src={track.images[2].url} alt={track.name} />\n            <h6 className=\"track-info\">\n                {track.name}\n            </h6>\n            <h6 className=\"track-info\">\n                {track.artist}\n            </h6>\n        </div>\n    );\n};","import { useSelector } from \"react-redux\";\nimport { selectRecommendations } from \"../../utils/state/musicSlice\";\nimport Recommendation from \"../Recommendation/Recommendation\";\nimport Subnav from \"../Subnav/Subnav\";\nimport './Recommendations.css';\n\nexport default function Recommendations() {\n    const recommendations = useSelector(selectRecommendations);\n\n    let content;\n    if (recommendations.length === 0) {\n        content =\n            <div id=\"recommendations\">\n                <Subnav />\n                <div className=\"content\">\n                    <div>\n                        Select genres to see recommendations.\n                    </div>\n                </div>\n            </div>;\n    } else {\n        content =\n            <div id=\"recommendations\">\n                <Subnav />\n                <div className=\"content\">\n                    {recommendations.map(track => {\n                        return <Recommendation key={track.id} track={track} />\n                    })}\n                </div>\n            </div>;\n    };\n\n    return (\n        content\n    );\n};","import Subnav from \"../Subnav/Subnav\";\nimport './Forum.css';\n\nexport default function Forum() {\n    return (\n        <div id=\"forum\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Forum</p>\n            </div>\n        </div>\n    );\n};","import Subnav from \"../Subnav/Subnav\";\nimport './Account.css';\n\nexport default function Account() {\n    return (\n        <div id=\"account\">\n            <Subnav />\n            <div className=\"content\">\n                <p>Account</p>\n            </div>\n        </div>\n    );\n};","export const toggleSidebar = () => {\n    const sidebar = document.getElementById('sidebar');\n    const headings = document.getElementsByClassName('nav-heading');\n    const icons = document.getElementsByClassName('nav-icon');\n    const toggleButton = document.getElementById('toggle-button');\n    \n    sidebar.classList.toggle('active');\n    toggleButton.classList.toggle('rotate');\n\n    if (headings[0].classList.contains('hide')) {\n        setTimeout(() => {\n            for (let i = 0; i < headings.length; i++) {\n                headings[i].classList.toggle('hide');\n            };\n            \n            for (let i = 0; i < icons.length; i++) {\n                icons[i].classList.toggle('hide');\n            };\n        }, 400);\n    } else {\n        for (let i = 0; i < headings.length; i++) {\n            headings[i].classList.toggle('hide');\n        };\n        \n        for (let i = 0; i < icons.length; i++) {\n            icons[i].classList.toggle('hide');\n        };\n    };\n};","export const getGenres = async () => {\n    const response = await fetch(`/genres`, {\n        mode: \"cors\",\n        credentials: \"include\"\n    });\n    if (response.ok) {\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","export const updateGenres = async (genres) => {\n    await fetch(`/user`, {\n        method: \"PUT\",\n        mode: \"cors\",\n        credentials: \"include\",\n        body: JSON.stringify(genres),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n};","export default __webpack_public_path__ + \"static/media/inverted-logo.31f83cb9.png\";","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Recommendations from \"../Recommendations/Recommendations\";\nimport Forum from \"../Forum/Forum\";\nimport Account from \"../Account/Account\";\nimport { toggleSidebar } from \"../../utils/helperFunctions/toggleSidebar\";\nimport './SignedIn.css';\nimport { getGenres } from '../../utils/helperFunctions/getGenres';\nimport { updateGenres } from '../../utils/helperFunctions/updateGenres';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectEmail, selectGenres, setGenres } from \"../../utils/state/userSlice\";\nimport { getAccessToken, getAvailableGenres, getRecommendations, selectAccessToken } from \"../../utils/state/musicSlice\";\nimport logo from '../../assets/inverted-logo.png';\n\nexport default function SignedIn() {\n  const dispatch = useDispatch();\n  const genres = useSelector(selectGenres);\n  const userEmail = useSelector(selectEmail);\n  const accessToken = useSelector(selectAccessToken);\n\n  useEffect(() => {\n    if (accessToken === '' & userEmail !== '') {\n      dispatch(getAccessToken());\n    };\n    if (accessToken !== '') {\n      dispatch(getAvailableGenres({\n        accessToken: accessToken\n      }));\n    };\n  }, [accessToken, dispatch, userEmail]);\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      getGenres().then(data => {\n        for (let i = 0; i < data.length; i++) {\n          dispatch(setGenres(data[i]));\n        };\n      });\n    };\n  }, [dispatch, userEmail]);\n\n  useEffect(() => {\n    if (accessToken !== '') {\n      dispatch(getRecommendations({\n        accessToken: accessToken,\n        genres: genres\n      }));\n    };\n  }, [genres, accessToken, dispatch]);\n\n  useEffect(() => {\n    if (userEmail !== '') {\n      updateGenres(genres);\n    };\n  }, [genres, userEmail]);\n\n  return (\n    <Router>\n\n      <Redirect to=\"/dashboard\" />\n\n      <nav id=\"sidebar\" className=\"active\">\n        <ul id=\"nav-list\">\n          <li className=\"nav-element\">\n            <NavLink to=\"/dashboard\"><img src={logo} alt=\"logo\" id=\"logo\" /></NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/dashboard\"><i className=\"bi bi-house-fill nav-icon\"></i><h2 className=\"nav-heading hide\">Dashboard</h2></NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/recommendations\"><i className=\"bi bi-music-note-beamed nav-icon\"></i><h2 className=\"nav-heading hide\">Recommendations</h2></NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/forum\"><i className=\"bi bi-chat-fill nav-icon\"></i><h2 className=\"nav-heading hide\">Forum</h2></NavLink>\n          </li>\n          <li className=\"nav-element\">\n            <NavLink to=\"/account\"><i className=\"bi bi-person-fill nav-icon\"></i><h2 className=\"nav-heading hide\">Account</h2></NavLink>\n          </li>\n        </ul>\n\n        <button id=\"toggle-button\" className=\"rotate\" onClick={toggleSidebar}>\n          <i className=\"bi bi-arrow-left-circle-fill\" id=\"toggle-arrow\"></i>\n        </button>\n      </nav>\n        \n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      \n        <Route path=\"/recommendations\">\n          <Recommendations />\n        </Route>\n      \n        <Route path=\"/forum\">\n          <Forum />\n        </Route>\n      \n        <Route path=\"/Account\">\n          <Account />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","export const showMessages = () => {\n    const message = document.getElementById(\"message\");\n    message.style.visibility = \"visible\";\n};","import { useEffect, useState } from 'react';\nimport './Login.css';\nimport { requestLogin, setRegistering, selectMessage, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showMessages } from '../../utils/helperFunctions/showMessages';\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const handleLoginSubmit = e => {\n        e.preventDefault();\n        dispatch(requestLogin({\n            email: email,\n            password: password\n        }));\n    };\n\n    const handleRegSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(true));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        showMessages();\n    }, [message]);\n\n    return (\n        <div id=\"login\">\n            <div className=\"overlay\"></div>\n            <p id=\"message\">{message}</p>\n            <form id=\"login-form\" onSubmit={handleLoginSubmit}>\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control login-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control login-element\" onChange={updatePassword} required />\n                <button id=\"login-button\" type=\"submit\" className=\"btn btn-outline-light login-element\">\n                    Log In\n                </button>\n            </form>\n            <button onClick={handleRegSwitch} id=\"reg-link\" className=\"btn btn-outline-light login-element\">Don't have an account? Click here to sign up.</button>\n        </div>\n    );\n};","export const submitRegistration = async (firstName, lastName, email, password, validatedPassword) => {\n    if (password !== validatedPassword) {\n        return {\n            message: 'Passwords do not match.'\n        };\n    } else {\n        const data = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password\n        };\n        const response = await fetch(`/register`, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: 'include',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (response.ok) {\n            const jsonResponse = await response.json();\n            return jsonResponse;\n        };\n        const jsonResponse = await response.json();\n        return jsonResponse;\n    };\n};","import './Register.css';\nimport { selectMessage, setRegistering, setMessage } from '../../utils/state/preLoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { submitRegistration } from '../../utils/helperFunctions/submitRegistration';\nimport { showMessages } from '../../utils/helperFunctions/showMessages';\n\nexport default function Register() {\n    const dispatch = useDispatch();\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [validatedPassword, setValidatedPassword] = useState(null);\n    const message = useSelector(selectMessage);\n\n    const updateFirstName = e => {\n        e.preventDefault();\n        setFirstName(e.target.value);\n    };\n\n    const updateLastName = e => {\n        e.preventDefault();\n        setLastName(e.target.value);\n    };\n\n    const updateEmail = e => {\n        e.preventDefault();\n        setEmail(e.target.value);\n    };\n\n    const updatePassword = e => {\n        e.preventDefault();\n        setPassword(e.target.value);\n    };\n\n    const updateValidatedPassword = e => {\n        e.preventDefault();\n        setValidatedPassword(e.target.value);\n    };\n\n    const handleRegRequest = async (e) => {\n        e.preventDefault();\n        const response = await submitRegistration(firstName, lastName, email, password, validatedPassword);\n        dispatch(setMessage({\n            message: response.message\n        }));\n    };\n\n    const handleLoginSwitch = e => {\n        e.preventDefault();\n        dispatch(setRegistering(false));\n        dispatch(setMessage({\n            message: ''\n        }));\n    };\n\n    useEffect(() => {\n        if (message === 'Account created successfully.') {\n            dispatch(setRegistering(false));\n        } else {\n            showMessages();\n        };\n    }, [message, dispatch]);\n\n    return (\n        <div id=\"reg\">\n            <div className=\"overlay\"></div>\n            <p id=\"message\">{message}</p>\n            <form id=\"reg-form\" onSubmit={handleRegRequest}>\n                <input type=\"text\" placeholder=\"Enter your first name\" className=\"form-control reg-element\" onChange={updateFirstName} required />\n                <input type=\"text\" placeholder=\"Enter your last name\" className=\"form-control reg-element\" onChange={updateLastName} required />\n                <input type=\"email\" placeholder=\"Enter your email address\" className=\"form-control reg-element\" onChange={updateEmail} required />\n                <input type=\"password\" placeholder=\"Enter your password\" className=\"form-control reg-element\" onChange={updatePassword} required />\n                <input type=\"password\" placeholder=\"Validate your password\" className=\"form-control reg-element\" onChange={updateValidatedPassword} required />\n                <button id=\"reg-button\" type=\"submit\" className=\"btn btn-outline-light\">\n                    Register\n                </button>\n            </form>\n            <button id=\"login-link\" className=\"btn btn-outline-light reg-element\" onClick={handleLoginSwitch}>Already have an account? Click here to log in.</button>\n        </div>\n    );\n};","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport SignedIn from \"./components/SignedIn/SignedIn\";\nimport Login from \"./components/Login/Login\";\nimport { selectSignedIn, requestLogin, selectRegistering } from \"./utils/state/preLoginSlice\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Register from \"./components/Register/Register\";\nimport { getUserDetails, selectEmail, selectFirstName, selectLastName } from \"./utils/state/userSlice\";\n// import { pendo } from \"./utils/helperFunctions/pendo\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const registering = useSelector(selectRegistering);\n  const signedIn = useSelector(selectSignedIn);\n  // const userEmail = useSelector(selectEmail);\n  // const userFirstName = useSelector(selectFirstName);\n  // const userLastName = useSelector(selectLastName);\n\n  // useEffect(() => {\n  //   if (signedIn & userEmail !== '') {\n  //     pendo.initialize({\n  //       visitor: {\n  //         id: userEmail,\n  //         first_name: userFirstName,\n  //         last_name: userLastName\n  //       },\n  //       account: {\n  //         // id: 'unique-account-id'\n  //       }\n  //     });\n  //   }\n  // });\n\n  useEffect(() => {\n    if (document.cookie !== \"\" & !signedIn) {\n      dispatch(requestLogin());\n    };\n  });\n\n  useEffect(() => {\n    if (signedIn) {\n      dispatch(getUserDetails());\n    };\n  });\n\n  return (\n    <Router>\n\n      {signedIn && <Redirect to=\"/signedin\" />}\n      {registering && <Redirect to=\"/register\" />}\n      {!signedIn && !registering && <Redirect to=\"/login\" />}\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      \n        <Route path=\"/signedin\">\n          <SignedIn />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n};","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport preLoginReducer from './preLoginSlice';\nimport { combineReducers } from 'redux';\nimport userReducer from './userSlice';\nimport musicReducer from './musicSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst rootReducer = combineReducers({\n  preLogin: preLoginReducer,\n  user: userReducer,\n  music: musicReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    })\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { persistor, store } from './utils/state/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}