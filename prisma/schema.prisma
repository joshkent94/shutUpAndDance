generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp"), citext]
}

model comments {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id   String   @db.Uuid
  thread_id String   @db.Uuid
  date_time DateTime @default(now()) @db.Timestamp(6)
  comment   String
  likes     String[] @default([]) @db.Uuid
  threads   threads  @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users     users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model genres {
  id      String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id String   @db.Uuid @unique
  genres  String[] @db.VarChar(255)
  users   users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model threads {
  id              String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  creator_user_id String     @db.Uuid
  date_time       DateTime   @default(now()) @db.Timestamp(6)
  title           String     @db.VarChar(255)
  initial_comment String
  likes           String[]   @default([]) @db.Uuid
  comments        comments[]
  users           users      @relation(fields: [creator_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name String     @db.VarChar(255)
  last_name  String     @db.VarChar(255)
  email      String?    @unique @db.Citext
  salt       String?    @db.VarChar(255)
  password   String?    @db.VarChar(255)
  comments   comments[]
  genres     genres[]
  threads    threads[]
  widgets    widgets[]
}

model widgets {
  id      String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id String   @db.Uuid @unique
  widgets String[] @db.VarChar(255)
  users   users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
